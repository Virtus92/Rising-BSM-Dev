# paths/projects.yaml
projects:
  get:
    tags:
      - Projects
    summary: Get all projects
    description: Retrieve list of projects with optional filtering and pagination
    operationId: getAllProjects
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, abgeschlossen, storniert]
        description: Filter by status
      - in: query
        name: kunde_id
        schema:
          type: integer
        description: Filter by customer ID
      - in: query
        name: dienstleistung_id
        schema:
          type: integer
        description: Filter by service ID
      - in: query
        name: start_datum_von
        schema:
          type: string
          format: date
        description: Start date filter (from)
      - in: query
        name: start_datum_bis
        schema:
          type: string
          format: date
        description: Start date filter (to)
      - in: query
        name: search
        schema:
          type: string
        description: Search term for title and description
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: Page number (1-based)
      - in: query
        name: limit
        schema:
          type: integer
          default: 20
          maximum: 100
        description: Items per page
      - in: query
        name: sortBy
        schema:
          type: string
          enum: [titel, start_datum, end_datum, betrag, status, created_at]
          default: start_datum
        description: Field to sort by
      - in: query
        name: sortDirection
        schema:
          type: string
          enum: [asc, desc]
          default: desc
        description: Sort direction
    responses:
      '200':
        description: List of projects
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../schemas/models.yaml#/Project'
                pagination:
                  $ref: '../schemas/common.yaml#/Pagination'
                meta:
                  type: object
                  properties:
                    filters:
                      type: object
                      properties:
                        status:
                          type: string
                        kunde_id:
                          type: integer
                        search:
                          type: string
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  post:
    tags:
      - Projects
    summary: Create new project
    description: Add a new project
    operationId: createProject
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - titel
              - start_datum
            properties:
              titel:
                type: string
                description: Project title
                minLength: 2
                maxLength: 200
              kunde_id:
                type: integer
                nullable: true
                description: Customer ID
              dienstleistung_id:
                type: integer
                nullable: true
                description: Service ID
              start_datum:
                type: string
                format: date
                description: Project start date (YYYY-MM-DD)
              end_datum:
                type: string
                format: date
                nullable: true
                description: Project end date (YYYY-MM-DD)
              betrag:
                type: number
                format: float
                nullable: true
                description: Project amount/budget
                minimum: 0
              beschreibung:
                type: string
                nullable: true
                description: Project description
                maxLength: 2000
              status:
                type: string
                enum: [neu, in_bearbeitung, abgeschlossen, storniert]
                default: neu
                description: Project status
    responses:
      '201':
        description: Project created
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/models.yaml#/Project'
                message:
                  type: string
                  example: "Project created successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-id:
  get:
    tags:
      - Projects
    summary: Get project by ID
    description: Retrieve detailed project information with appointments and notes
    operationId: getProjectById
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    responses:
      '200':
        description: Project details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  allOf:
                    - $ref: '../schemas/models.yaml#/Project'
                    - type: object
                      properties:
                        customer:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                        service:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            priceBase:
                              type: number
                            unit:
                              type: string
                        appointments:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              title:
                                type: string
                              date:
                                type: string
                              status:
                                type: string
                              statusLabel:
                                type: string
                        notes:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              text:
                                type: string
                              userName:
                                type: string
                              formattedDate:
                                type: string
                              createdAt:
                                type: string
                                format: date-time
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  put:
    tags:
      - Projects
    summary: Update project
    description: Update an existing project
    operationId: updateProject
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              titel:
                type: string
                description: Project title
                minLength: 2
                maxLength: 200
              kunde_id:
                type: integer
                nullable: true
                description: Customer ID
              dienstleistung_id:
                type: integer
                nullable: true
                description: Service ID
              start_datum:
                type: string
                format: date
                description: Project start date (YYYY-MM-DD)
              end_datum:
                type: string
                format: date
                nullable: true
                description: Project end date (YYYY-MM-DD)
              betrag:
                type: number
                format: float
                nullable: true
                description: Project amount/budget
                minimum: 0
              beschreibung:
                type: string
                nullable: true
                description: Project description
                maxLength: 2000
              status:
                type: string
                enum: [neu, in_bearbeitung, abgeschlossen, storniert]
                description: Project status
    responses:
      '200':
        description: Project updated
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/models.yaml#/Project'
                message:
                  type: string
                  example: "Project updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  delete:
    tags:
      - Projects
    summary: Delete project
    description: Mark project as deleted (soft delete)
    operationId: deleteProject
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    responses:
      '200':
        description: Project deleted
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                id:
                  type: integer
                message:
                  type: string
                  example: "Project deleted successfully"
      '400':
        description: Cannot delete project with related data
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/Error'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-id-status:
  patch:
    tags:
      - Projects
    summary: Update project status
    description: Change the status of a project
    operationId: updateProjectStatus
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum: [neu, in_bearbeitung, abgeschlossen, storniert]
                description: New project status
              note:
                type: string
                description: Optional note about the status change
                maxLength: 1000
    responses:
      '200':
        description: Status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                    status:
                      type: string
                    statusLabel:
                      type: string
                message:
                  type: string
                  example: "Project status updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-id-notes:
  post:
    tags:
      - Projects
    summary: Add note to project
    description: Add a new note to an existing project
    operationId: addProjectNote
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - note
            properties:
              note:
                type: string
                description: Note text
                minLength: 1
                maxLength: 1000
    responses:
      '201':
        description: Note added successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                    projectId:
                      type: integer
                    text:
                      type: string
                    userName:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                message:
                  type: string
                  example: "Note added successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-batch-status:
  patch:
    tags:
      - Projects
    summary: Batch update project status
    description: Change the status of multiple projects at once
    operationId: batchUpdateProjectStatus
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - ids
              - status
            properties:
              ids:
                type: array
                items:
                  type: integer
                description: Array of project IDs to update
                minItems: 1
              status:
                type: string
                enum: [neu, in_bearbeitung, abgeschlossen, storniert]
                description: New project status
              note:
                type: string
                description: Optional note about the status change
                maxLength: 1000
    responses:
      '200':
        description: Status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                count:
                  type: integer
                  description: Number of projects updated
                message:
                  type: string
                  example: "3 projects updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-statistics:
  get:
    tags:
      - Projects
    summary: Get project statistics
    description: Retrieve statistics about projects like status counts, values, trends
    operationId: getProjectStatistics
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, abgeschlossen, storniert]
        description: Filter by status
      - in: query
        name: kunde_id
        schema:
          type: integer
        description: Filter by customer ID
      - in: query
        name: dienstleistung_id
        schema:
          type: integer
        description: Filter by service ID
      - in: query
        name: start_datum_von
        schema:
          type: string
          format: date
        description: Start date filter (from)
      - in: query
        name: start_datum_bis
        schema:
          type: string
          format: date
        description: Start date filter (to)
    responses:
      '200':
        description: Project statistics
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    statusCounts:
                      type: object
                      properties:
                        neu:
                          type: integer
                        in_bearbeitung:
                          type: integer
                        abgeschlossen:
                          type: integer
                        storniert:
                          type: integer
                    totalValue:
                      type: number
                      description: Total project value
                    byMonth:
                      type: array
                      description: Projects grouped by month
                      items:
                        type: object
                        properties:
                          month:
                            type: string
                          count:
                            type: integer
                          value:
                            type: number
                    topCustomers:
                      type: array
                      description: Top customers by project count or value
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          projectCount:
                            type: integer
                          totalValue:
                            type: number
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-export:
  get:
    tags:
      - Projects
    summary: Export projects
    description: Export projects to a file (CSV or Excel)
    operationId: exportProjects
    parameters:
      - in: query
        name: format
        schema:
          type: string
          enum: [csv, excel]
          default: excel
        description: Export file format
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, abgeschlossen, storniert]
        description: Filter by status
      - in: query
        name: startDate
        schema:
          type: string
          format: date
        description: Start date for filtering (YYYY-MM-DD)
      - in: query
        name: endDate
        schema:
          type: string
          format: date
        description: End date for filtering (YYYY-MM-DD)
    responses:
      '200':
        description: File export successful
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
          text/csv:
            schema:
              type: string
              format: binary
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
projects:
  get:
    tags:
      - Projects
    summary: Get all projects
    description: Retrieve list of projects with optional filtering
    operationId: getAllProjects
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, abgeschlossen, storniert]
        description: Filter by status
      - in: query
        name: search
        schema:
          type: string
        description: Search term for title or description
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: Page number
      - in: query
        name: limit
        schema:
          type: integer
          default: 20
        description: Items per page
    responses:
      '200':
        description: List of projects
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                projects:
                  type: array
                  items:
                    $ref: '../schemas/models.yaml#/Project'
                pagination:
                  $ref: '../schemas/common.yaml#/Pagination'
                filters:
                  type: object
                  properties:
                    status:
                      type: string
                    search:
                      type: string
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  post:
    tags:
      - Projects
    summary: Create new project
    description: Add a new project
    operationId: createProject
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - startDate
            properties:
              title:
                type: string
                minLength: 2
                description: Project title
              customerId:
                type: integer
                description: ID of the associated customer
              serviceId:
                type: integer
                description: ID of the associated service
              startDate:
                type: string
                format: date
                description: Project start date (YYYY-MM-DD)
              endDate:
                type: string
                format: date
                description: Project end date (YYYY-MM-DD)
              amount:
                type: number
                format: float
                description: Project amount
              description:
                type: string
                description: Project description
              status:
                type: string
                enum: [neu, in_bearbeitung, abgeschlossen, storniert]
                description: Project status
    responses:
      '201':
        description: Project created
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                projectId:
                  type: integer
                message:
                  type: string
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-id:
  get:
    tags:
      - Projects
    summary: Get project by ID
    description: Retrieve detailed project information
    operationId: getProjectById
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    responses:
      '200':
        description: Project details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                project:
                  $ref: '../schemas/models.yaml#/Project'
                notes:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      text:
                        type: string
                      userId:
                        type: integer
                      userName:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  put:
    tags:
      - Projects
    summary: Update project
    description: Update an existing project
    operationId: updateProject
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - startDate
            properties:
              title:
                type: string
                minLength: 2
                description: Project title
              customerId:
                type: integer
                description: ID of the associated customer
              serviceId:
                type: integer
                description: ID of the associated service
              startDate:
                type: string
                format: date
                description: Project start date (YYYY-MM-DD)
              endDate:
                type: string
                format: date
                description: Project end date (YYYY-MM-DD)
              amount:
                type: number
                format: float
                description: Project amount
              description:
                type: string
                description: Project description
              status:
                type: string
                enum: [neu, in_bearbeitung, abgeschlossen, storniert]
                description: Project status
    responses:
      '200':
        description: Project updated
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                projectId:
                  type: integer
                message:
                  type: string
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  delete:
    tags:
      - Projects
    summary: Delete project
    description: Mark project as deleted (soft delete)
    operationId: deleteProject
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    responses:
      '200':
        description: Project deleted
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
      '400':
        description: Cannot delete project with related data
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/Error'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-id-notes:
  post:
    tags:
      - Projects
    summary: Add note to project
    description: Add a new note to an existing project
    operationId: addProjectNote
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - note
            properties:
              note:
                type: string
                description: Note text
    responses:
      '201':
        description: Note added successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                projectId:
                  type: integer
                message:
                  type: string
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'

projects-id-status:
  patch:
    tags:
      - Projects
    summary: Update project status
    description: Change the status of a project
    operationId: updateProjectStatus
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Project ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum: [neu, in_bearbeitung, abgeschlossen, storniert]
                description: New project status
    responses:
      '200':
        description: Status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                projectId:
                  type: integer
                message:
                  type: string
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

projects-export:
  get:
    tags:
      - Projects
    summary: Export projects
    description: Export projects to a file (CSV or Excel)
    operationId: exportProjects
    parameters:
      - in: query
        name: format
        schema:
          type: string
          enum: [csv, excel]
          default: excel
        description: Export file format
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, abgeschlossen, storniert]
        description: Filter by status
      - in: query
        name: startDate
        schema:
          type: string
          format: date
        description: Start date for filtering (YYYY-MM-DD)
      - in: query
        name: endDate
        schema:
          type: string
          format: date
        description: End date for filtering (YYYY-MM-DD)
    responses:
      '200':
        description: File export successful
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
          text/csv:
            schema:
              type: string
              format: binary
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
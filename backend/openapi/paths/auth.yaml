login:
  post:
    tags:
      - Authentication
    summary: Login user
    description: Authenticate user and get access token
    operationId: login
    security: [] # No authentication required for login
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              remember:
                type: boolean
          example:
            email: admin@example.com
            password: AdminPass123!
            remember: true
    responses:
      '200':
        description: Login successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                accessToken:
                  type: string
                refreshToken:
                  type: string
                expiresIn:
                  type: number
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
      '401':
        description: Invalid credentials
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/Error'

refresh-token:
  post:
    tags:
      - Authentication
    summary: Refresh access token
    description: Get new access token using refresh token
    operationId: refreshToken
    security: [] # No authentication required for refresh
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - refreshToken
            properties:
              refreshToken:
                type: string
    responses:
      '200':
        description: Token refresh successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                accessToken:
                  type: string
                refreshToken:
                  type: string
                expiresIn:
                  type: number
      '401':
        description: Invalid refresh token
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/Error'

forgot-password:
  post:
    tags:
      - Authentication
    summary: Request password reset
    description: Send email with password reset link
    operationId: forgotPassword
    security: [] # No authentication required for password reset
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                format: email
    responses:
      '200':
        description: Password reset instructions sent
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string

reset-token:
  get:
    tags:
      - Authentication
    summary: Validate reset token
    description: Check if reset token is valid
    operationId: validateResetToken
    security: [] # No authentication required for token validation
    parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
        description: Reset token
    responses:
      '200':
        description: Token is valid
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                userId:
                  type: integer
                email:
                  type: string
      '400':
        description: Invalid token
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/Error'

reset-password:
  post:
    tags:
      - Authentication
    summary: Reset password
    description: Set new password using reset token
    operationId: resetPassword
    security: [] # No authentication required for password reset
    parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
        description: Reset token
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - password
              - confirmPassword
            properties:
              password:
                type: string
                format: password
                minLength: 8
              confirmPassword:
                type: string
                format: password
    responses:
      '200':
        description: Password reset successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/Error'

logout:
  post:
    tags:
      - Authentication
    summary: Logout user
    description: Invalidate refresh token
    operationId: logout
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              refreshToken:
                type: string
    responses:
      '200':
        description: Logout successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
login:
  post:
    tags:
      - Authentication
    summary: Login user
    description: Authenticate user and get access token
    operationId: login
    security: [] # No authentication required for login
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              remember:
                type: boolean
                default: false
          example:
            email: admin@example.com
            password: AdminPass123!
            remember: true
    responses:
      '200':
        description: Login successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    accessToken:
                      type: string
                    refreshToken:
                      type: string
                    expiresIn:
                      type: number
                    user:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                message:
                  type: string
                  example: "Login successful"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '401':
        description: Invalid credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: "Invalid email or password"
                statusCode:
                  type: integer
                  example: 401

refresh-token:
  post:
    tags:
      - Authentication
    summary: Refresh access token
    description: Get new access token using refresh token
    operationId: refreshToken
    security: [] # No authentication required for refresh
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - refreshToken
            properties:
              refreshToken:
                type: string
    responses:
      '200':
        description: Token refresh successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    accessToken:
                      type: string
                    refreshToken:
                      type: string
                    expiresIn:
                      type: number
                message:
                  type: string
                  example: "Token refreshed successfully"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '401':
        description: Invalid refresh token
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: "Invalid refresh token"
                statusCode:
                  type: integer
                  example: 401

forgot-password:
  post:
    tags:
      - Authentication
    summary: Request password reset
    description: Send email with password reset link
    operationId: forgotPassword
    security: [] # No authentication required for password reset
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                format: email
    responses:
      '200':
        description: Password reset instructions sent
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "If an account with this email exists, password reset instructions have been sent"
                    resetToken:
                      type: string
                      description: "Reset token (only returned in development environment)"
                message:
                  type: string
                  example: "If an account with this email exists, password reset instructions have been sent"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time

validate-reset-token:
  get:
    tags:
      - Authentication
    summary: Validate reset token
    description: Check if reset token is valid
    operationId: validateResetToken
    security: [] # No authentication required for token validation
    parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
        description: Reset token
    responses:
      '200':
        description: Token is valid
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    valid:
                      type: boolean
                      example: true
                    userId:
                      type: integer
                    email:
                      type: string
                message:
                  type: string
                  example: "Token is valid"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '400':
        description: Invalid token
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  description: Main error message
                statusCode:
                  type: integer
                  description: HTTP status code
                errors:
                  type: array
                  items:
                    type: string
                  description: List of specific error messages
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time

reset-password:
  post:
    tags:
      - Authentication
    summary: Reset password
    description: Set new password using reset token
    operationId: resetPassword
    security: [] # No authentication required for password reset
    parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
        description: Reset token
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - password
              - confirmPassword
            properties:
              password:
                type: string
                format: password
                minLength: 8
              confirmPassword:
                type: string
                format: password
    responses:
      '200':
        description: Password reset successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                message:
                  type: string
                  example: "Password has been reset successfully"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  description: Main error message
                statusCode:
                  type: integer
                  description: HTTP status code
                errors:
                  type: array
                  items:
                    type: string
                  description: List of specific error messages
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time

logout:
  post:
    tags:
      - Authentication
    summary: Logout user
    description: Invalidate refresh token
    operationId: logout
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - refreshToken
            properties:
              refreshToken:
                type: string
                description: "Refresh token to invalidate"
    responses:
      '200':
        description: Logout successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                message:
                  type: string
                  example: "Logged out successfully"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Unauthorized"
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    description: "Access token is missing or invalid"
                  meta:
                    type: object
                    properties:
                      timestamp:
                        type: string
                        format: date-time

# Neue Test-API nur für Entwicklungsumgebung
get-reset-token:
  get:
    tags:
      - Authentication
      - Development
    summary: Get reset token for testing (Development only)
    description: Retrieve a reset token for a specific email for testing purposes
    operationId: getResetToken
    security: [] # No authentication required
    parameters:
      - in: query
        name: email
        required: true
        schema:
          type: string
          format: email
        description: Email to get reset token for
    responses:
      '200':
        description: Reset token information
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    resetToken:
                      type: string
                    resetTokenExpiry:
                      type: string
                      format: date-time
                message:
                  type: string
                  example: "Reset token retrieved for testing"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '404':
        description: No active reset token found
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  description: Main error message
                statusCode:
                  type: integer
                  description: HTTP status code
                errors:
                  type: array
                  items:
                    type: string
                  description: List of specific error messages
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
# paths/services.yaml
services:
  get:
    tags:
      - Services
    summary: Get all services
    description: Retrieve list of services with optional filtering and pagination
    operationId: getAllServices
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [aktiv, inaktiv]
        description: Filter by status (aktiv=true, inaktiv=false)
      - in: query
        name: search
        schema:
          type: string
        description: Search term for service name and description
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: Page number (1-based)
      - in: query
        name: limit
        schema:
          type: integer
          default: 20
          maximum: 100
        description: Items per page
      - in: query
        name: sortBy
        schema:
          type: string
          enum: [name, preis_basis, einheit, created_at]
          default: name
        description: Field to sort by
      - in: query
        name: sortDirection
        schema:
          type: string
          enum: [asc, desc]
          default: asc
        description: Sort direction
    responses:
      '200':
        description: List of services
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../schemas/models.yaml#/Service'
                pagination:
                  $ref: '../schemas/common.yaml#/Pagination'
                meta:
                  type: object
                  properties:
                    filters:
                      type: object
                      properties:
                        status:
                          type: string
                        search:
                          type: string
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  post:
    tags:
      - Services
    summary: Create new service
    description: Add a new service
    operationId: createService
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - preis_basis
              - einheit
            properties:
              name:
                type: string
                description: Service name
                minLength: 2
                maxLength: 100
              beschreibung:
                type: string
                nullable: true
                description: Service description
                maxLength: 2000
              preis_basis:
                type: number
                format: float
                description: Base price
                minimum: 0
              einheit:
                type: string
                description: Unit (e.g., hour, piece, m²)
                maxLength: 20
              mwst_satz:
                type: number
                format: float
                default: 20
                description: VAT rate in percentage
                minimum: 0
                maximum: 100
              aktiv:
                type: boolean
                default: true
                description: Service status (active/inactive)
    responses:
      '201':
        description: Service created
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/models.yaml#/Service'
                message:
                  type: string
                  example: "Service created successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '403':
        $ref: '../openapi.yaml#/components/responses/ForbiddenError'

services-id:
  get:
    tags:
      - Services
    summary: Get service by ID
    description: Retrieve detailed service information
    operationId: getServiceById
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Service ID
    responses:
      '200':
        description: Service details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/models.yaml#/Service'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  put:
    tags:
      - Services
    summary: Update service
    description: Update an existing service
    operationId: updateService
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Service ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Service name
                minLength: 2
                maxLength: 100
              beschreibung:
                type: string
                nullable: true
                description: Service description
                maxLength: 2000
              preis_basis:
                type: number
                format: float
                description: Base price
                minimum: 0
              einheit:
                type: string
                description: Unit (e.g., hour, piece, m²)
                maxLength: 20
              mwst_satz:
                type: number
                format: float
                description: VAT rate in percentage
                minimum: 0
                maximum: 100
              aktiv:
                type: boolean
                description: Service status (active/inactive)
    responses:
      '200':
        description: Service updated
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/models.yaml#/Service'
                message:
                  type: string
                  example: "Service updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '403':
        $ref: '../openapi.yaml#/components/responses/ForbiddenError'

services-id-status:
  patch:
    tags:
      - Services
    summary: Toggle service status
    description: Enable or disable a service
    operationId: toggleServiceStatus
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Service ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - aktiv
            properties:
              aktiv:
                type: boolean
                description: Service status (true=active, false=inactive)
    responses:
      '200':
        description: Status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                    aktiv:
                      type: boolean
                message:
                  type: string
                  example: "Service status updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '403':
        $ref: '../openapi.yaml#/components/responses/ForbiddenError'

services-id-statistics:
  get:
    tags:
      - Services
    summary: Get service statistics
    description: Retrieve usage and revenue statistics for a service
    operationId: getServiceStatistics
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Service ID
      - in: query
        name: period
        schema:
          type: string
          enum: [week, month, quarter, year]
          default: month
        description: Time period for statistics
    responses:
      '200':
        description: Service statistics
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    service:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        active:
                          type: boolean
                    usage:
                      type: object
                      properties:
                        totalProjects:
                          type: integer
                        activeProjects:
                          type: integer
                        completedProjects:
                          type: integer
                    revenue:
                      type: object
                      properties:
                        totalRevenue:
                          type: number
                        avgProjectValue:
                          type: number
                        periodComparison:
                          type: number
                          description: Percentage change compared to previous period
                    monthlyRevenue:
                      type: array
                      description: Revenue grouped by month
                      items:
                        type: object
                        properties:
                          month:
                            type: string
                          revenue:
                            type: number
                    topCustomers:
                      type: array
                      description: Top customers for this service
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          revenue:
                            type: number
                          projectCount:
                            type: integer
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

services-batch-status:
  patch:
    tags:
      - Services
    summary: Batch update service status
    description: Enable or disable multiple services at once
    operationId: batchUpdateServiceStatus
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - ids
              - aktiv
            properties:
              ids:
                type: array
                items:
                  type: integer
                description: Array of service IDs to update
                minItems: 1
              aktiv:
                type: boolean
                description: Service status (true=active, false=inactive)
    responses:
      '200':
        description: Services updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                count:
                  type: integer
                  description: Number of services updated
                message:
                  type: string
                  example: "4 services updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '403':
        $ref: '../openapi.yaml#/components/responses/ForbiddenError'
appointments:
  get:
    tags:
      - Appointments
    summary: Get all appointments
    description: Retrieve list of appointments with optional filtering and pagination
    operationId: getAllAppointments
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [geplant, bestaetigt, abgeschlossen, storniert]
        description: Filter by status
      - in: query
        name: date
        schema:
          type: string
          format: date
        description: Filter by specific date (YYYY-MM-DD)
      - in: query
        name: customerId
        schema:
          type: integer
        description: Filter by customer ID
      - in: query
        name: projectId
        schema:
          type: integer
        description: Filter by project ID
      - in: query
        name: search
        schema:
          type: string
        description: Search term for appointment title or location
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: Page number (1-based)
      - in: query
        name: limit
        schema:
          type: integer
          default: 20
          maximum: 100
        description: Items per page
      - in: query
        name: sortBy
        schema:
          type: string
          enum: [termin_datum, titel, status, created_at]
          default: termin_datum
        description: Field to sort by
      - in: query
        name: sortDirection
        schema:
          type: string
          enum: [asc, desc]
          default: asc
        description: Sort direction
    responses:
      '200':
        description: List of appointments
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../schemas/models.yaml#/Appointment'
                pagination:
                  $ref: '../schemas/common.yaml#/Pagination'
                meta:
                  type: object
                  properties:
                    filters:
                      type: object
                      properties:
                        status:
                          type: string
                        date:
                          type: string
                        search:
                          type: string
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  post:
    tags:
      - Appointments
    summary: Create new appointment
    description: Schedule a new appointment
    operationId: createAppointment
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - titel
              - termin_datum
              - termin_zeit
            properties:
              titel:
                type: string
                description: Appointment title
                minLength: 2
                maxLength: 200
              kunde_id:
                type: integer
                nullable: true
                description: Customer ID
              projekt_id:
                type: integer
                nullable: true
                description: Project ID
              termin_datum:
                type: string
                format: date
                description: Appointment date (YYYY-MM-DD)
              termin_zeit:
                type: string
                pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
                description: Appointment time (HH:MM)
              dauer:
                type: integer
                default: 60
                description: Duration in minutes
                minimum: 1
              ort:
                type: string
                nullable: true
                description: Appointment location
                maxLength: 200
              beschreibung:
                type: string
                nullable: true
                description: Appointment description
                maxLength: 2000
              status:
                type: string
                enum: [geplant, bestaetigt, abgeschlossen, storniert]
                default: geplant
                description: Appointment status
    responses:
      '201':
        description: Appointment created
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/models.yaml#/Appointment'
                message:
                  type: string
                  example: "Appointment created successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

appointments-id:
  get:
    tags:
      - Appointments
    summary: Get appointment by ID
    description: Retrieve detailed appointment information including notes
    operationId: getAppointmentById
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Appointment ID
    responses:
      '200':
        description: Appointment details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  allOf:
                    - $ref: '../schemas/models.yaml#/Appointment'
                    - type: object
                      properties:
                        notes:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              text:
                                type: string
                              userName:
                                type: string
                              formattedDate:
                                type: string
                              createdAt:
                                type: string
                                format: date-time
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  put:
    tags:
      - Appointments
    summary: Update appointment
    description: Update an existing appointment
    operationId: updateAppointment
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Appointment ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              titel:
                type: string
                description: Appointment title
                minLength: 2
                maxLength: 200
              kunde_id:
                type: integer
                nullable: true
                description: Customer ID
              projekt_id:
                type: integer
                nullable: true
                description: Project ID
              termin_datum:
                type: string
                format: date
                description: Appointment date (YYYY-MM-DD)
              termin_zeit:
                type: string
                pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
                description: Appointment time (HH:MM)
              dauer:
                type: integer
                description: Duration in minutes
                minimum: 1
              ort:
                type: string
                nullable: true
                description: Appointment location
                maxLength: 200
              beschreibung:
                type: string
                nullable: true
                description: Appointment description
                maxLength: 2000
              status:
                type: string
                enum: [geplant, bestaetigt, abgeschlossen, storniert]
                description: Appointment status
    responses:
      '200':
        description: Appointment updated
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/models.yaml#/Appointment'
                message:
                  type: string
                  example: "Appointment updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

  delete:
    tags:
      - Appointments
    summary: Delete appointment
    description: Delete an existing appointment
    operationId: deleteAppointment
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Appointment ID
    responses:
      '200':
        description: Appointment deleted
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                id:
                  type: integer
                message:
                  type: string
                  example: "Appointment deleted successfully"
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '409':
        description: Appointment cannot be deleted
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/Error'

appointments-status:
  patch:
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - status
            properties:
              id:
                type: integer
                description: Appointment ID
              status:
                type: string
                enum: [geplant, bestaetigt, abgeschlossen, storniert]
              note:
                type: string

appointments-id-notes:
  post:
    tags:
      - Appointments
    summary: Add note to appointment
    description: Add a new note to an existing appointment
    operationId: addAppointmentNote
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Appointment ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - note
            properties:
              note:
                type: string
                description: Note text
                minLength: 1
                maxLength: 1000
    responses:
      '201':
        description: Note added successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    userName:
                      type: string
                    formattedDate:
                      type: string
                message:
                  type: string
                  example: "Note added successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

appointments-batch:
  patch:
    tags:
      - Appointments
    summary: Batch update appointment status
    description: Update status for multiple appointments at once
    operationId: batchUpdateAppointmentStatus
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - ids
              - status
            properties:
              ids:
                type: array
                items:
                  type: integer
                description: Array of appointment IDs
                minItems: 1
              status:
                type: string
                enum: [geplant, bestaetigt, abgeschlossen, storniert]
                description: New status for all selected appointments
              note:
                type: string
                description: Optional note about the status change
                maxLength: 1000
    responses:
      '200':
        description: Appointments updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                count:
                  type: integer
                  description: Number of appointments updated
                message:
                  type: string
                  example: "3 appointments updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
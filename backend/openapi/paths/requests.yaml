requests:
  get:
    tags:
      - Requests
    summary: Get all contact requests
    description: Retrieve list of contact requests with optional filtering
    operationId: getAllRequests
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, beantwortet, geschlossen]
        description: Filter by status
      - in: query
        name: service
        schema:
          type: string
          enum: [facility, moving, winter, other]
        description: Filter by service type
      - in: query
        name: date
        schema:
          type: string
          format: date
        description: Filter by creation date
      - in: query
        name: search
        schema:
          type: string
        description: Search term for name or email
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: Page number
      - in: query
        name: limit
        schema:
          type: integer
          default: 20
        description: Items per page
    responses:
      '200':
        description: List of contact requests
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../schemas/models.yaml#/ContactRequest'
                pagination:
                  $ref: '../schemas/common.yaml#/Pagination'
                meta:
                  type: object
                  properties:
                    filters:
                      type: object
                      properties:
                        status:
                          type: string
                        service:
                          type: string
                        date:
                          type: string
                        search:
                          type: string
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-id:
  get:
    tags:
      - Requests
    summary: Get contact request by ID
    description: Retrieve detailed contact request information
    operationId: getRequestById
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Request ID
    responses:
      '200':
        description: Contact request details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  allOf:
                    - $ref: '../schemas/models.yaml#/ContactRequest'
                    - type: object
                      properties:
                        notes:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              text:
                                type: string
                              userName:
                                type: string
                              formattedDate:
                                type: string
                              createdAt:
                                type: string
                                format: date-time
                        processor:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                            role:
                              type: string
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-id-status:
  patch:
    tags:
      - Requests
    summary: Update request status
    description: Change the status of a contact request
    operationId: updateRequestStatus
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Request ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum: [neu, in_bearbeitung, beantwortet, geschlossen]
                description: New request status
              note:
                type: string
                description: Optional note about the status change
                maxLength: 1000
    responses:
      '200':
        description: Status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    requestId:
                      type: integer
                    status:
                      type: string
                message:
                  type: string
                  example: "Request status updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-id-notes:
  post:
    tags:
      - Requests
    summary: Add note to request
    description: Add a new note to a contact request
    operationId: addRequestNote
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Request ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - note
            properties:
              note:
                type: string
                description: Note text
                minLength: 1
                maxLength: 1000
    responses:
      '201':
        description: Note added successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    requestId:
                      type: integer
                    noteId:
                      type: integer
                message:
                  type: string
                  example: "Note added successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-id-assign:
  patch:
    tags:
      - Requests
    summary: Assign request to processor
    description: Assign a contact request to a user for processing
    operationId: assignRequest
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Request ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - processorId
            properties:
              processorId:
                type: integer
                description: User ID to assign the request to
    responses:
      '200':
        description: Request assigned successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                    processorId:
                      type: integer
                    processorName:
                      type: string
                message:
                  type: string
                  example: "Request assigned successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-batch-status:
  patch:
    tags:
      - Requests
    summary: Batch update request status
    description: Change the status of multiple contact requests at once
    operationId: batchUpdateRequestStatus
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - ids
              - status
            properties:
              ids:
                type: array
                items:
                  type: integer
                description: Array of request IDs to update
                minItems: 1
              status:
                type: string
                enum: [neu, in_bearbeitung, beantwortet, geschlossen]
                description: New request status
              note:
                type: string
                description: Optional note about the status change
                maxLength: 1000
    responses:
      '200':
        description: Status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                count:
                  type: integer
                  description: Number of requests updated
                message:
                  type: string
                  example: "3 requests updated successfully"
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-export:
  get:
    tags:
      - Requests
    summary: Export contact requests
    description: Export contact requests to a file (CSV or Excel)
    operationId: exportRequests
    parameters:
      - in: query
        name: format
        schema:
          type: string
          enum: [csv, excel]
          default: excel
        description: Export file format
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, beantwortet, geschlossen]
        description: Filter by status
      - in: query
        name: service
        schema:
          type: string
          enum: [facility, moving, winter, other]
        description: Filter by service type
      - in: query
        name: startDate
        schema:
          type: string
          format: date
        description: Start date for filtering (YYYY-MM-DD)
      - in: query
        name: endDate
        schema:
          type: string
          format: date
        description: End date for filtering (YYYY-MM-DD)
    responses:
      '200':
        description: File export successful
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
          text/csv:
            schema:
              type: string
              format: binary
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '501':
        description: Export functionality is not implemented yet
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: "Export functionality is not implemented yet"
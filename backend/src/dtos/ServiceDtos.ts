/**
 * DTO for creating a service
 */
export interface ServiceCreateDto {
  /**
   * Service name
   */
  name: string;
  
  /**
   * Service description
   */
  description?: string;
  
  /**
   * Base price
   */
  basePrice: number;
  
  /**
   * VAT rate in percent
   */
  vatRate?: number;
  
  /**
   * Activity status (active/inactive)
   */
  active?: boolean;
  
  /**
   * Unit (e.g., hour, piece, etc.)
   */
  unit?: string;
}

/**
 * DTO for updating a service
 */
export interface ServiceUpdateDto {
  /**
   * Service name
   */
  name?: string;
  
  /**
   * Service description
   */
  description?: string;
  
  /**
   * Base price
   */
  basePrice?: number;
  
  /**
   * VAT rate in percent
   */
  vatRate?: number;
  
  /**
   * Activity status (active/inactive)
   */
  active?: boolean;
  
  /**
   * Unit (e.g., hour, piece, etc.)
   */
  unit?: string;
}

/**
 * DTO for service response
 */
export interface ServiceResponseDto {
  /**
   * Service ID
   */
  id: number;
  
  /**
   * Service name
   */
  name: string;
  
  /**
   * Service description
   */
  description?: string;
  
  /**
   * Base price
   */
  basePrice: number;
  
  /**
   * Formatted base price
   */
  formattedBasePrice: string;
  
  /**
   * VAT rate in percent
   */
  vatRate: number;
  
  /**
   * Activity status (active/inactive)
   */
  active: boolean;
  
  /**
   * Status label
   */
  statusLabel: string;
  
  /**
   * Unit (e.g., hour, piece, etc.)
   */
  unit?: string;
  
  /**
   * Formatted price with unit
   */
  priceWithUnit: string;
  
  /**
   * Creation timestamp
   */
  createdAt: string;
  
  /**
   * Last update timestamp
   */
  updatedAt: string;
}

/**
 * DTO for service status update
 */
export interface ServiceStatusUpdateDto {
  /**
   * Active status
   */
  active: boolean;
}

/**
 * DTO for service filter parameters
 */
export interface ServiceFilterParams {
  /**
   * Filter by status (active/inactive)
   */
  status?: 'active' | 'inactive';
  
  /**
   * Search term
   */
  search?: string;
  
  /**
   * Page number
   */
  page?: number;
  
  /**
   * Items per page
   */
  limit?: number;
  
  /**
   * Field to sort by
   */
  sortBy?: string;
  
  /**
   * Sort direction
   */
  sortDirection?: 'asc' | 'desc';
}

/**
 * DTO for service statistics
 */
export interface ServiceStatisticsDto {
  /**
   * Service details
   */
  service: {
    id: number;
    name: string;
    active: boolean;
  };
  
  /**
   * Usage statistics
   */
  usage: {
    /**
     * Total revenue generated by this service
     */
    totalRevenue: number;
    
    /**
     * Number of invoices containing this service
     */
    invoiceCount: number;
    
    /**
     * Monthly revenue
     */
    monthlyRevenue: {
      month: string;
      revenue: number;
    }[];
    
    /**
     * Top customers using this service
     */
    topCustomers: {
      id: number;
      name: string;
      revenue: number;
    }[];
  };
}

/**
 * Validation schema for creating a service
 */
export const serviceCreateValidationSchema = {
  name: {
    type: 'string',
    required: true,
    min: 2,
    max: 100,
    messages: {
      required: 'Name ist erforderlich',
      min: 'Name muss mindestens 2 Zeichen lang sein',
      max: 'Name darf nicht länger als 100 Zeichen sein'
    }
  },
  description: {
    type: 'string',
    required: false,
    max: 2000,
    messages: {
      max: 'Beschreibung darf nicht länger als 2000 Zeichen sein'
    }
  },
  basePrice: {
    type: 'number',
    required: true,
    min: 0,
    messages: {
      required: 'Preis ist erforderlich',
      type: 'Preis muss eine Zahl sein',
      min: 'Preis darf nicht negativ sein'
    }
  },
  vatRate: {
    type: 'number',
    required: false,
    min: 0,
    max: 100,
    default: 20,
    messages: {
      type: 'MwSt-Satz muss eine Zahl sein',
      min: 'MwSt-Satz darf nicht negativ sein',
      max: 'MwSt-Satz darf nicht über 100% liegen'
    }
  },
  active: {
    type: 'boolean',
    required: false,
    default: true,
    messages: {
      type: 'Aktiv muss ein Boolean-Wert sein'
    }
  },
  unit: {
    type: 'string',
    required: false,
    max: 20,
    messages: {
      max: 'Einheit darf nicht länger als 20 Zeichen sein'
    }
  }
};

/**
 * Validation schema for updating a service
 */
export const serviceUpdateValidationSchema = {
  name: {
    type: 'string',
    required: false,
    min: 2,
    max: 100,
    messages: {
      min: 'Name muss mindestens 2 Zeichen lang sein',
      max: 'Name darf nicht länger als 100 Zeichen sein'
    }
  },
  description: {
    type: 'string',
    required: false,
    max: 2000,
    messages: {
      max: 'Beschreibung darf nicht länger als 2000 Zeichen sein'
    }
  },
  basePrice: {
    type: 'number',
    required: false,
    min: 0,
    messages: {
      type: 'Preis muss eine Zahl sein',
      min: 'Preis darf nicht negativ sein'
    }
  },
  vatRate: {
    type: 'number',
    required: false,
    min: 0,
    max: 100,
    messages: {
      type: 'MwSt-Satz muss eine Zahl sein',
      min: 'MwSt-Satz darf nicht negativ sein',
      max: 'MwSt-Satz darf nicht über 100% liegen'
    }
  },
  active: {
    type: 'boolean',
    required: false,
    messages: {
      type: 'Aktiv muss ein Boolean-Wert sein'
    }
  },
  unit: {
    type: 'string',
    required: false,
    max: 20,
    messages: {
      max: 'Einheit darf nicht länger als 20 Zeichen sein'
    }
  }
};

/**
 * Validation schema for updating a service status
 */
export const serviceStatusUpdateValidationSchema = {
  active: {
    type: 'boolean',
    required: true,
    messages: {
      required: 'Status ist erforderlich',
      type: 'Status muss ein Boolean-Wert sein'
    }
  }
};

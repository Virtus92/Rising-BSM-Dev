requests:
  get:
    tags:
      - Requests
    summary: Get all contact requests
    description: Retrieve list of contact requests with optional filtering and pagination
    operationId: getAllRequests
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [neu, in_bearbeitung, beantwortet, geschlossen]
        description: Filter by status
      - in: query
        name: service
        schema:
          type: string
          enum: [facility, moving, winter, other]
        description: Filter by service type
      - in: query
        name: date
        schema:
          type: string
          format: date
        description: Filter by creation date
      - in: query
        name: search
        schema:
          type: string
        description: Search term for name or email
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: Page number
      - in: query
        name: limit
        schema:
          type: integer
          default: 20
        description: Items per page
    responses:
      '200':
        description: List of contact requests
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../schemas/contact.yaml#/ContactRequest'
                message:
                  type: string
                  example: "Anfragen erfolgreich abgerufen"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    pagination:
                      $ref: '../schemas/common.yaml#/Pagination'
                    filters:
                      type: object
                      properties:
                        status:
                          type: string
                        service:
                          type: string
                        date:
                          type: string
                        search:
                          type: string
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-id:
  get:
    tags:
      - Requests
    summary: Get contact request by ID
    description: Retrieve detailed contact request information
    operationId: getRequestById
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Request ID
    responses:
      '200':
        description: Contact request details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/contact.yaml#/ContactRequestWithDetails'
                message:
                  type: string
                  example: "Anfrage erfolgreich abgerufen"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-id-status:
  patch:
    tags:
      - Requests
    summary: Update request status
    description: Change the status of a contact request
    operationId: updateRequestStatus
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Request ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/contact.yaml#/RequestStatusUpdate'
    responses:
      '200':
        description: Status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    requestId:
                      type: integer
                    status:
                      type: string
                message:
                  type: string
                  example: "Anfrage-Status erfolgreich aktualisiert"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-id-notes:
  post:
    tags:
      - Requests
    summary: Add note to request
    description: Add a new note to a contact request
    operationId: addRequestNote
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Request ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/contact.yaml#/RequestNoteCreate'
    responses:
      '201':
        description: Note added successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    requestId:
                      type: integer
                    noteId:
                      type: integer
                message:
                  type: string
                  example: "Notiz erfolgreich hinzugefügt"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFoundError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'

requests-export:
  get:
    tags:
      - Requests
    summary: Export contact requests
    description: Export contact requests data (not implemented)
    operationId: exportRequests
    responses:
      '501':
        description: Not implemented
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Exportfunktionalität wird auf TypeScript und Prisma migriert"
                meta:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
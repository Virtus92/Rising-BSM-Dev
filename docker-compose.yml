services:
  # Database service
  db:
    image: postgres:13
    container_name: rising-bsm-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rising_bsm
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rising-bsm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API service
#  backend:
#    build:
#      context: ./backend
#      dockerfile: Dockerfile
#    container_name: rising-bsm-api
#    env_file:
#      - ./.env
#    ports:
#      - "5000:5000"
#    depends_on:
#      db:
#        condition: service_healthy
#    volumes:
#      - ./backend:/app
#      - /app/node_modules
#      - ./backend/dist:/app/dist
#    networks:
#      - rising-bsm-network
#    command: >
#      sh -c "npx prisma generate && npx prisma migrate deploy && npm run db:seed && npm run dev"
  
  # Frontend service (development mode)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: rising-bsm-frontend
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - SEED_DATABASE=true
      - TS_NODE_COMPILER_OPTIONS='{"module":"CommonJS","moduleResolution":"node"}'
      - TS_NODE_TRANSPILE_ONLY=true
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - rising-bsm-network

networks:
  rising-bsm-network:
    driver: bridge

volumes:
  postgres_data:
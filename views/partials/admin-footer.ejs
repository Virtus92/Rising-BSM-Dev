</div> <!-- End of dashboard-content -->
</main> <!-- End of dashboard-main -->
</div> <!-- End of dashboard-wrapper -->

<!-- Bootstrap Bundle JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- jQuery (required for DataTables) -->
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

<!-- DataTables with Bootstrap 5 -->
<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>

<!-- Dashboard Layout Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
// Sidebar Toggle (Mobile)
const sidebarToggle = document.getElementById('sidebarToggle');
const sidebarClose = document.getElementById('sidebarClose');
const sidebarOverlay = document.getElementById('sidebarOverlay');
const dashboardWrapper = document.getElementById('dashboardWrapper');

// Toggle sidebar
if (sidebarToggle) {
  sidebarToggle.addEventListener('click', function() {
    dashboardWrapper.classList.add('sidebar-open');
  });
}

// Close sidebar
const closeSidebar = () => {
  dashboardWrapper.classList.remove('sidebar-open');
};

if (sidebarClose) {
  sidebarClose.addEventListener('click', closeSidebar);
}

if (sidebarOverlay) {
  sidebarOverlay.addEventListener('click', closeSidebar);
}

// Close sidebar when clicking on menu items on mobile
const navLinks = document.querySelectorAll('.sidebar-nav .nav-link');
navLinks.forEach(link => {
  link.addEventListener('click', function() {
    if (window.innerWidth < 768) {
      setTimeout(closeSidebar, 150);
    }
  });
});

// Initialize DataTables if present
if (typeof $.fn.DataTable !== 'undefined') {
  const dataTables = document.querySelectorAll('.datatable');
  dataTables.forEach(table => {
    if (!$.fn.DataTable.isDataTable(table)) {
      $(table).DataTable({
        language: {
          url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/de-DE.json',
        },
        responsive: true,
        pageLength: 10,
        lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Alle"]]
      });
    }
  });
}

// Initialize Chart.js if present
if (typeof Chart !== 'undefined') {
  initializeCharts();
}
});

function initializeCharts() {
// Revenue Chart
const revenueChartEl = document.getElementById('revenueChart');
if (revenueChartEl) {
  // Check if chart data is available in the global scope
  if (typeof revenueChartData !== 'undefined' && revenueChartData) {
    new Chart(revenueChartEl, {
      type: 'line',
      data: {
        labels: revenueChartData.labels,
        datasets: [{
          label: 'Umsatz',
          data: revenueChartData.data,
          borderColor: '#198754',
          backgroundColor: 'rgba(25, 135, 84, 0.1)',
          tension: 0.3,
          fill: true,
          borderWidth: 2
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function(value) {
                return '€' + value.toLocaleString('de-DE');
              }
            }
          }
        },
        plugins: {
          tooltip: {
            callbacks: {
              label: function(context) {
                return '€' + context.parsed.y.toLocaleString('de-DE');
              }
            }
          }
        }
      }
    });
  } else {
    console.warn('Revenue chart data not available');
  }
}

// Services Chart
const servicesChartEl = document.getElementById('servicesChart');
if (servicesChartEl) {
  // Check if chart data is available in the global scope
  if (typeof servicesChartData !== 'undefined' && servicesChartData) {
    new Chart(servicesChartEl, {
      type: 'doughnut',
      data: {
        labels: servicesChartData.labels,
        datasets: [{
          data: servicesChartData.data,
          backgroundColor: [
            'rgba(25, 135, 84, 0.8)',
            'rgba(13, 110, 253, 0.8)',
            'rgba(255, 193, 7, 0.8)'
          ],
          borderColor: [
            'rgba(25, 135, 84, 1)',
            'rgba(13, 110, 253, 1)',
            'rgba(255, 193, 7, 1)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          tooltip: {
            callbacks: {
              label: function(context) {
                const label = context.label || '';
                const value = context.parsed || 0;
                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                const percentage = Math.round((value / total) * 100);
                return `${label}: ${value} (${percentage}%)`;
              }
            }
          }
        }
      }
    });
  } else {
    console.warn('Services chart data not available');
  }
}
}
</script>

<!-- Dashboard Custom JS (if needed) -->
<% if (typeof customScripts !== 'undefined' && customScripts) { %>
<%- customScripts %>
<% } %>
</body>
</html>